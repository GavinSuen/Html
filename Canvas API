Canvas的概念最初是由苹果公司提出的，用于在Mac OS X WebKit中创建控制板部件。Canvas本质上是一个位图画布，其上绘制的图形是不可
缩放的，不能像SVG图像那样可以被放大缩小。此外，用Canvas绘制出来的对象不属于页面DOM结构或者任何命名空间——这点被认为是一个缺陷。
SVG图像却可以在不同的分辨率下流畅的缩放，并且支持单击检测。
尽管Canvas有明显的不足，但HTML Canvas API有两方面优势可以弥补；首先，不需要将所绘制图像中的每个图元当做对象存储，因此执行性能非
常好；其次，在其他编程语言现有的优秀二维绘图API的基础上实现Canvas API相对来说比较简单。

Canvas是什么？
在网页上使用Canvas元素时，它会创建一块矩形区域。默认情况下该矩形区域宽为300像素，高为150像素，但也可以自定义具体的大小或者设置
canvas元素的其他特性。

<canvas></canvas>
在页面中加入了canvas元素后，我们便可以通过JavaScript来自由地控制它。可以在其中添加图片、线条以及文字，也可以在里面绘图，设置hai
可以加入高级动画。

大多数主流操作系统和框架支持的二维绘制操作，HTML Canvas API都支持。使用canvas编程首先要获取上下文（cntext）。接着在上下文中执行
动作，最后将这些动作应用到上下文中。

什么情况下不用canvas
尽管canvas元素功能非常强大，用处也非常多，但在某些情况下，如果其他元素已经够用了，就不应该再使用canvas元素。例如，用canvas元素
在HTML页面中动态绘制所有不同的标题就不如直接使用标题样式标签（H1，H2等），他们所实现的效果是一样的。 
